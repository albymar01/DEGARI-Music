# ============================
# FIX + RUN per DEGARI-Music
# ============================

Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass -Force
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8
$env:PYTHONUTF8 = "1"

$ROOT = "C:\Users\sinog\Desktop\DEGARI-Music"
$VENV = Join-Path $ROOT ".venv"
Set-Location $ROOT

# --- 1) Pulisci venv vecchia (se attiva, disattiva; poi elimina) ---
try { if (Get-Command deactivate -ErrorAction SilentlyContinue) { deactivate } } catch {}
if (Test-Path $VENV) { Write-Host "Rimuovo venv vecchia..." -ForegroundColor Yellow; Remove-Item -Recurse -Force $VENV }

# --- 2) Crea venv nuova ---
if (Get-Command py -ErrorAction SilentlyContinue) {
  py -3 -m venv $VENV
} else {
  python -m venv $VENV
}

# Attiva e definisci un alias sicuro al python della venv
& "$VENV\Scripts\Activate.ps1"
$PY = Join-Path $VENV "Scripts\python.exe"

# --- 3) Installa/aggiorna pip e dipendenze ---
& $PY -m pip install -U pip
if (Test-Path "$ROOT\requirements.txt") {
  & $PY -m pip install -r "$ROOT\requirements.txt"
} else {
  & $PY -m pip install owlready2 numpy pandas scikit-learn tqdm
}

# --- 4) Parametri ---
$genres = @("rap","metal","rock","pop","trap","reggae","rnb","country")

# --- 5) MODULE 1: prototipi ---
Write-Host "`n=== Module 1: Creazione dei prototipi ===" -ForegroundColor Cyan
Set-Location "$ROOT\Creazione dei prototipi"
& $PY prototyper.py

# --- 6) MODULE 2: preprocessing su tutte le coppie ---
Write-Host "`n=== Module 2: Preprocessing ===" -ForegroundColor Cyan
Set-Location "$ROOT\Sistema di raccomandazione"
foreach ($g1 in $genres) {
  foreach ($g2 in $genres) {
    if ($g1 -ne $g2) {
      Write-Host ">> cocos_preprocessing $g1 $g2"
      & $PY cocos_preprocessing.py $g1 $g2
    }
  }
}

# --- 7) MODULE 3: COCOS (prototipi -> 14) ---
Write-Host "`n=== Module 3: COCOS ===" -ForegroundColor Cyan
Set-Location "$ROOT\Sistema di raccomandazione"
foreach ($g1 in $genres) {
  foreach ($g2 in $genres) {
    if ($g1 -ne $g2) {
      $proto = "prototipi_music\{0}_{1}.txt" -f $g1,$g2
      if (Test-Path $proto) {
        Write-Host ">> cocos.py $proto 14"
        & $PY cocos.py $proto 14
      } else {
        Write-Host "!! Manca $proto, salto." -ForegroundColor Yellow
      }
    }
  }
}

# --- 8) MODULE 4: Recommender ---
Write-Host "`n=== Module 4: Recommender ===" -ForegroundColor Cyan
Set-Location "$ROOT\Sistema di raccomandazione\Classificatore"
foreach ($g1 in $genres) {
  foreach ($g2 in $genres) {
    if ($g1 -ne $g2) {
      $protoRel = "..\prototipi_music\{0}_{1}.txt" -f $g1,$g2
      if (Test-Path $protoRel) {
        Write-Host ">> Recommender.py $protoRel"
        & $PY Recommender.py $protoRel
      } else {
        Write-Host "!! Manca $protoRel, salto." -ForegroundColor Yellow
      }
    }
  }
}

Write-Host "`n=== FATTO âœ… ===" -ForegroundColor Green
